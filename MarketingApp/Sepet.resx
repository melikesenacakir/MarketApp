<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAYAAAA+s9J6AAAABGdBTUEAALGPC/xhBQAAE6BJREFUeF7t
        nXtwFOWaxrlfxXDIgUC4iDkGVkgAYVFcoYBFBSLFURIDk7NcFkGqsGqR8kJtYaF7WMrjehSkkJAQwyXJ
        JAQtSEBCAIuqBYEC5FrgJRgJoSBcBKVqa/+b2fdp885+aQeYAEm6e55f1VPv190zuXT3873v93VPTzNC
        CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
        CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKIa6ioqGh78uTJ
        /tnZ2al+vz919+7dY65du9apdjMhpKE4cODAP7z++usfSDPQtm3bQPPmzQNoq0aNGlVeVlY2TtqEkAdJ
        MBhsvnDhwr9JE+YLYhXUokWLULtDhw7aDrzwwgsl169f7yltQsiDYPHixUskBCXzWUIbBmzVqlXIhFDr
        1q1DcejQoYdqamo6yjIh5F6RDNjO5/PlSjOUAWHCli1b1smCKqzDNl1OS0srlp/RQtqEkPoi5mk7f/58
        jP/qGO12UvNpplSVlpZOlEgIqQ9iwFYpKSlb0IxEduNBmjmffvrpQ8yGhNQDjOMmTZoUMqB93BdOZgkK
        wZRmufrNN98MkkgIuRuXLl3qkJqaug4TKzr2k9X1lk7QQG3atAkWFhamSZsQciekZGyTnJx8VA0USQY0
        pcbVZdPAeXl5qRIJIbcDd7tkZGRsUONohBEjyYZqPrMMRQbU7QUFBVMkEkLCUV1d3X78+PElZhYzLzWY
        628n06jmxXysh5E3btxIExISjhs3bsRMmjSpRJp1spgaz8xmd5NZvur7NRYVFdGEhNiRMWBHKUEL0Gxo
        sRwlxAYuQyQlJX2DyZRIxnz3q+Li4pckEkLA1atXu8+YMcMvzYjGew9CGzZs+LNEQoiUoB369u37A5qa
        ARsjE+bl5U2WSEh0U11d3bNfv34V0rQmYKDGyoSFhYU0IYlubt682fmpp546Lk3LFDBfYxkQYiYkUc0v
        v/zyBwn45LtlCPOyg/0ul4ZSUVERx4QkOkEJOmTIkOP2zAfz6XW9xhgT+v3+FyUSEl1cvny5a1xcXFV9
        7wFtCNGEJOr4/vvve/bq1auqMbJcJMrPz+d1QhI9SAnaZdiwYSe0/NRb0ZpS69at4x0zxPsEg8HmV65c
        iRPzWZMwmgWdUI4WFxfz84TE+1y4cCF+wIABp5D51Hj1uQG7IVVQUPCyREK8y7fffts3ISHhvDTrzIIi
        GzohE9KExNOcPXv2EUzCSDN0J4yZDZ0gmpB4lnPnznUbPHjwMc1+iOZEDNpOmCHNy8tLl0iIt6isrIyT
        bBe6E8bJogmJ50AJOmjQoGPSdFTZeTtt2rSJJiTeAQaMj4+/IE3rBHeDCfPz86dKJMT9YBa0R48e1iRM
        Y918/SDk9/uZCYn7OX/+fI/k5OQT5rU/p1wHvIsCRUVFnB0l7gaPpJAQ0JnOjh07hmY9zUcMOliBdu3a
        BWJiYm6lp6fnL1u2bNGuXbueOXz48MDTp0/3lu2EOJdjx4490rNnz4vmZQhtu2E8CKF0hnTZvI7ZrVu3
        KykpKaXvvvvu0vLy8udw2QW34Mk2QpqekydP9pKM97vLEGpCnMxuGRdCZqdhdiq6vtacgWHDhh1cv359
        +pYtW56/ePFirGwjpPE5cuRIkmQPV1wHvF+ZHYl5s4GU2oGuXbteyMjI2Lh169Znf/311y7MkqRR+Oqr
        r/5JDeimTHevMo1ntiHNkhj7xsfHn582bVqW7J+JNCNpMGBAORFDGdAJt501tMyOBm27Ec3xZLt27awo
        rwvMnDlz1ZkzZx6TZUIeDGVlZePUgDgRXTLzed+C8exGROcD6fpwr0GWxP6aPHly4f79+wfKekLuHRhQ
        gluu/T1QwVDodEyThRNMF27/1FYLAZ/PV5ibmztVStVWskxI5OzcufNZCaESVMdBZiaIBt3OiLo/7MLr
        Idv6QGJi4gncIIBvHpZlQu4MxoAS6pxM5hgo2qTGghntGVK3ma83OyzEDh06hLYNHjz44I4dO56XNiHh
        MSdhzJNL29FiRjVQOKkBzQyp5tRlyPwZaENq0IEDBx6pqKj4k7QJ+X+2b98+VsY3oRKUajjVdmaBRYsW
        LcHzWKVNoh0pkf5ZAg3YiIIRMdvcrVu3qi+++AJjcBKtlJeXw4Chk+NOpRj14KSzqjAiytnp06dn4Yty
        ZB2JJvDJAQlWBsSJoBeeqYaVjh+xz9WMWCdZsaa0tBSdIokGysrKxkuoM2FANY7s1Qb2v070YNsbb7zx
        X7XfXkW8SklJyQTpeeuMAXEioDe2z/JRDSOYDTJnnM322LFjy/AAZWkTr7F+/fpXJfzuepZ9mWoc6X43
        bwlEVqzNjIHa67bEK+Tk5MyTEDIaDrRZClGNI93/4bIgttmrkffee++vwWCwrbSJm8nMzJwrgYZzicx7
        UmHKKVOmFPEeVBezfPnyORKi8mZsN0ozoUYtWfv3738c33YsbeImPvnkkznm/YuU82WWozpWRETJGhMT
        cxlPupN1xA2sXLlyrpaf2pvaxxuU+4SMeOrUqWRpEyeij1lYsWLF3HAZUM1IOV968wSyoP1GCln3y969
        e/9R2sRJiAFbImZnZ1uTMJDOuuFAclLGHcIMabi7l/T4IaKiwQ33hw4dGiDriJPIysqyJmF0LKHCgeM1
        QHfIHDLgwcraxjFEp2oeR6lsAgcOHGBp6hRWrVo1BwdKpQdTI9YhUs6XOZNtP56QdrJY371796pr165x
        sqap+frrr4dICNzJaMyE3pAeY5hS2wkJCd9fuXIlTtqkKcnMzJwtIfQdETSdd6VZEcdY2yNGjDgUDAb5
        HJumZs2aNa9IsDKiOSmDyJlRbwnmM0tUyOfz5UskTc3q1autyRmYzsyGMCaN6A3BfPZKRzvbDz74YLFE
        0tToLCmkGVEj5W6Z4357p6qZcefOnRMkkqZGMyIOGseH3pRmP7ODVSNWV1fzkfxOYO3atf8qveX/6oGh
        Gb0h82K+2YYptVRNTk4+fOPGjRhZT5oav9/vkxA6UJS7peWoWYq2b9/+d9thyCVLlvy7tIkTwCMtJIRK
        FfSUkB4wc5xBuVvmscQx3rp1a4q0iROQgzHebjY1JSdtvKMwM+ABPk7RQeDblvSWKBwsmNI0IjOiN6TH
        FPeeou3z+fzBYLCFrCNOAF/1LKHOJA0zobeEDtZ+TDdt2pQukTiF8vLy5yRYM2vaa0I0o7cEM2p5+tBD
        D93ibW0Oo6SkxDIiMiKfP+Md2SfczCHGm2+++VeJxEns2bPHMiJEI3pH9qGGZsP27dsHzp49+4i0iZP4
        8ssvn9MLvnqwKPfKHF6E+4R+ampqsZSlfHyi04ARJYQOlFnCmBmSJvWG5Hjz3lIngjEiyhgtZWA+s6xh
        ueodPfPMM/slG1oPBSMOo7S0dGRsbOzP0rQOlj6xDeMK05CU+1X7zVzEiezevXukPQvqOINGdL8w1ECn
        Onbs2BLJhm1kHXEiR48e/ZOM/wIwnx40WU15QNqRYtJm27Ztz0ubOJUzZ848FhMT8z/SDB1Ac+aNcrdw
        LLt06VIjbeJkfvjhhwQJ1sOjcNBYjrpfOsNd26EGfvrpp74SiZM5depUQufOna2MaF66oNwprWYQIZ/P
        ly3LxOmgNJVQ5yu2NSua1w7dcB0RHYmZ0c2TEtHcZnY62jbX4T32n3W795jrm1r6v0KdOnW6Jdmwu7SJ
        0zl37txj8fHx180TCxGC+fR5J26RfQY43OST+T+aJy7eZ+9wnGa0O0n/F/2bly5dukiWiRtAaTpgwIAT
        OAntJ51bTkDz26r0b8b/Y/+fcKKaxtP1dvPhffbXYZ35GpVTKgX9P/XvTkxMrAgGg62lTdxATU1NNwlW
        aap30eiJaJ6MThZOQBhCzaIG06gKZ0II70XmvN3/i/X42dCdXtdUCvf37Nu3byTvonERly9f7jpkyJAT
        0gwdRPsJ7FSNHj1617x58zIzMjIyR44c+d/QqFGjymNjY3/FdnQs4f4XPXFhrNttVzl5X+BvC2fCuXPn
        ZkokbuK77757tE+fPhfNEssp5dadlJeXlyrRQnr+Fuj9oR9//DGmqqrqD5D8b/Fnzpzpc/jw4SFbtmx5
        /uOPP35rwYIF/5Genr75iSeeOJKUlHSia9eu1/GUMz2h7ffW4mRXw2pGRDRf05TC36WdBf4uGe9Xy37g
        HTRuA7NqnTt3vuCmO2qKior+LPG+OXfuXO8dO3aM2Lx587jMzMxZyKyyOvTNWNgndmM6Sdoh4O+t7UgC
        UpIOk0jcBr4bLzk5+aQ0Qz2rk5Wfn/+SxAZBMklr6Zg679q1a/Ty5ctnT506dWNcXNx1bHJaR6UmNP+u
        d955h5+8dyu1T3oOXUc0MwAOspZsTjCp3+9/UWKjUVlZ+YiUtQPXr1+fnpKSUiqrLAOYpal5eUfX2/fZ
        nUp9c5IpEunPws/W9+GYDR8+/GvpVDvJMnEjMKJmRJVpOqdcR5QxYaOa0I5ky3aSjdNmzpy5KjEx8Ues
        gtBZqTnUgHZjYTu2qcxt2Nd3Mqop83X4vaYRjx49OlTaxK1cvXq1e+/evaul+buD7RQVFhY2WDlaX9Bx
        4VuW8cgJWbT+PtNcWlHYDaeC8cxtkWZD+3Ex37dy5cq5Eombqaio6JqQkGAZUU8SPVGcYMqGHBPeD6dP
        n+79/vvvv9WzZ89qmM+sItA2KwlzG/atuRypzOMC4WcgK6IklWXids6fP99j2LBhoeuI5sFuajnVhIqU
        qy327Nnz9LRp0/LsD2pS46AzsxsvUiOaxwI/x35spAPA2J54gdoBvjVZo724E8y4bt26KRIdj5ix5fbt
        25998sknD6NctJea9nX3s29hYOP9AY4LPYScSA9LRjyOpjkV3pQqLi5Ok+gq8KSDtLQ0a9xoZsdws6qR
        CIazm9Y09YcffvhvyMjSJl6gsrIyrm/fvhekeU9jlwetgoKClyW6Dpji4MGDQx9//PHj2qGZY+xIx9v2
        YwDjmetgzunTp3+GTCzLxCtcunTpj2PGjNklzToHPNyXWza0/H6/q78YRczRPjc3d6oYsc7nO6Fw5am5
        LpJ9DDP36tVL+s7KOFkmXuLWrVt/HD169Ff2HltPkkh78vtVXl6eJ76dCJ9m8fl8+Wq2cNdhzW316eTw
        vqqqKjzahHgN9OL9+/c/DsPhpIABzZ7abDeUCgsLp0r0DPjyVwnWc4AkWgbCvoXxsE7NZ1Ydd5KWuseP
        H0+USLwIZk1nzZpVIE3rYOuJ0lgTN14zIcA+nT9//od6cV9ljh3rkwmhrKysORKJV6moqHh40qRJ26Rp
        HXA9Wep7otyL8vPzPWdCIFVG8xUrVsxAJjQ7NCxrqR9pNoRmzJjhl0i8DErTyZMnh4yo45eGlldNqOzd
        u3dInz59KkzzQZGW+ngPXovxuywTr4MySnrcUGlqL6caQm6fHY0E6eBa4X5UexkabvLmdkpKSjolkUQD
        NTU1HQcPHmxd0G8MeWV29G6IEVu/9tprf0fTzIiRCMZ99NFH8fCndrJMogGUptJzF6AMClc2RVpKQfZx
        Jd5rrsPHiCRGDcuWLXtL959G864b3TemUVHKxsbGXsHN+LJMogV8rGfixInWGBEnAU4Y+8kT6Qwq3m8f
        Y+rP27BhQ1SZUDq45mvWrJmh+073ZbjSH9vUlNh+4sSJgdIm0cSlS5c6jBs3zvr0OaRGwomh0m31Ed6n
        P8t80FM0IZ3PS+b+RDTHjLpNTQrt27dvsEQSbUjPHYPS1JxOjzQDQmYGxElmLkObNm2KShOCnJycl8Pt
        E9OIphl37tw5VtokGsEYsV+/fqdwwmjPbI5ZIpF5QkE40WDmaM2ESm5uLspxa3/ovlUTmsI2PO5R2iRa
        wVjm7bff/k/NgojhTpZwshvWLLH8fn9UmxB8/vnnL+q+NMeG9gzp9WuqJALEiB3N569EWpaaJsR71IQ4
        4Y4cOZIk7ajns88++4vuF5gP+0lNqAZdu3YtTUh+Y+HChR9LsE6MSKQmNEsuGHD48OH7pU1qWbZs2RvY
        R/YKQ/fZ6tWrZ0okpFmzn3/++eHZs2d/Ks06paUpNZ5ZUtnLKxnjTJRIDCZMmLA13HVDKCcnhyYkdcnI
        yMiXEDpJ8DVnakqznDKNqiVsWlraZilvW0mbGMg+aZ2UlHQQ+9LMiujUsrKyaEJSF0zWLF68eKlpMrTt
        5jPHjtg2aNCgQxhfyjIJg/l1d1CnTp2sKGPCGRIJqYuYqeXKlStnieGsD7Kq8cwyyjThK6+8spaParg7
        u3fvHoH9Zk5q4U4bayMh4Thw4EDyq6++ukqaVg+OkweqvcgfkLFOyZ49e57Fa0lkiOn+RTqzAKoHUeDT
        Tz+lCcndkczYBrdXSenky8vL8+FZnTdv3uyM0rX2JSRCsM8WLFjwNzQxm5yTkzP9ty2EkEYD5b4Eq7pY
        tWoVTUhIU1B7z2ggOzv7L7+tIYQ0OnPmzPn7Rx99NK92kRDS2Fy9evWhbdu2jaldJIQQQgghhBBCCCGE
        EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
        EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEHfRrNn/AYw4+jtEdRyTAAAAAElFTkSuQmCC
</value>
  </data>
</root>